---
source: tests/src/analysis.rs
expression: "build_snapshot(fixture, &src, &context)"

---
ModuleAttributes {
    type_defs: {
        "Foo": Contract(
            Contract {
                name: "Foo",
                functions: [
                    FunctionAttributes {
                        is_public: true,
                        name: "read_bar",
                        params: [
                            (
                                "key",
                                Base(
                                    Address,
                                ),
                            ),
                        ],
                        return_type: Array(
                            Array {
                                size: 10,
                                inner: Byte,
                            },
                        ),
                    },
                    FunctionAttributes {
                        is_public: true,
                        name: "write_bar",
                        params: [
                            (
                                "key",
                                Base(
                                    Address,
                                ),
                            ),
                            (
                                "value",
                                Array(
                                    Array {
                                        size: 10,
                                        inner: Byte,
                                    },
                                ),
                            ),
                        ],
                        return_type: Base(
                            Unit,
                        ),
                    },
                ],
            },
        ),
    },
}

note: 
  ┌─ features/address_bytes10_map.fe:5:16
  │
5 │         return self.bar[key].to_mem()
  │                ^^^^^^^^ attributes hash: 6266892331664546248
  │
  = ExpressionAttributes {
        typ: Map(
            Map {
                key: Address,
                value: Array(
                    Array {
                        size: 10,
                        inner: Byte,
                    },
                ),
            },
        ),
        location: Storage {
            nonce: Some(
                0,
            ),
        },
        move_location: None,
    }

note: 
  ┌─ features/address_bytes10_map.fe:5:25
  │
5 │         return self.bar[key].to_mem()
  │                         ^^^ attributes hash: 513065555763557710
  │
  = ExpressionAttributes {
        typ: Base(
            Address,
        ),
        location: Value,
        move_location: None,
    }

note: 
  ┌─ features/address_bytes10_map.fe:5:16
  │
5 │         return self.bar[key].to_mem()
  │                ^^^^^^^^^^^^^ attributes hash: 4797734063705839167
  │
  = ExpressionAttributes {
        typ: Array(
            Array {
                size: 10,
                inner: Byte,
            },
        ),
        location: Storage {
            nonce: None,
        },
        move_location: None,
    }

note: 
  ┌─ features/address_bytes10_map.fe:5:16
  │
5 │         return self.bar[key].to_mem()
  │                ^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 16692882328884997814
  │
  = ExpressionAttributes {
        typ: Array(
            Array {
                size: 10,
                inner: Byte,
            },
        ),
        location: Storage {
            nonce: None,
        },
        move_location: Some(
            Memory,
        ),
    }

note: 
  ┌─ features/address_bytes10_map.fe:8:9
  │
8 │         self.bar[key] = value
  │         ^^^^^^^^ attributes hash: 6266892331664546248
  │
  = ExpressionAttributes {
        typ: Map(
            Map {
                key: Address,
                value: Array(
                    Array {
                        size: 10,
                        inner: Byte,
                    },
                ),
            },
        ),
        location: Storage {
            nonce: Some(
                0,
            ),
        },
        move_location: None,
    }

note: 
  ┌─ features/address_bytes10_map.fe:8:18
  │
8 │         self.bar[key] = value
  │                  ^^^ attributes hash: 513065555763557710
  │
  = ExpressionAttributes {
        typ: Base(
            Address,
        ),
        location: Value,
        move_location: None,
    }

note: 
  ┌─ features/address_bytes10_map.fe:8:9
  │
8 │         self.bar[key] = value
  │         ^^^^^^^^^^^^^ attributes hash: 4797734063705839167
  │
  = ExpressionAttributes {
        typ: Array(
            Array {
                size: 10,
                inner: Byte,
            },
        ),
        location: Storage {
            nonce: None,
        },
        move_location: None,
    }

note: 
  ┌─ features/address_bytes10_map.fe:8:25
  │
8 │         self.bar[key] = value
  │                         ^^^^^ attributes hash: 11048300695449627985
  │
  = ExpressionAttributes {
        typ: Array(
            Array {
                size: 10,
                inner: Byte,
            },
        ),
        location: Memory,
        move_location: None,
    }

note: 
  ┌─ features/address_bytes10_map.fe:4:5
  │  
4 │ ╭     pub def read_bar(key: address) -> bytes[10]:
5 │ │         return self.bar[key].to_mem()
  │ ╰─────────────────────────────────────^ attributes hash: 4888841692411158740
  │  
  = FunctionAttributes {
        is_public: true,
        name: "read_bar",
        params: [
            (
                "key",
                Base(
                    Address,
                ),
            ),
        ],
        return_type: Array(
            Array {
                size: 10,
                inner: Byte,
            },
        ),
    }

note: 
  ┌─ features/address_bytes10_map.fe:7:5
  │  
7 │ ╭     pub def write_bar(key: address, value: bytes[10]):
8 │ │         self.bar[key] = value
  │ ╰─────────────────────────────^ attributes hash: 4945796714900412883
  │  
  = FunctionAttributes {
        is_public: true,
        name: "write_bar",
        params: [
            (
                "key",
                Base(
                    Address,
                ),
            ),
            (
                "value",
                Array(
                    Array {
                        size: 10,
                        inner: Byte,
                    },
                ),
            ),
        ],
        return_type: Base(
            Unit,
        ),
    }

note: 
  ┌─ features/address_bytes10_map.fe:1:1
  │  
1 │ ╭ contract Foo:
2 │ │     pub bar: Map<address, bytes[10]>
3 │ │ 
4 │ │     pub def read_bar(key: address) -> bytes[10]:
  · │
7 │ │     pub def write_bar(key: address, value: bytes[10]):
8 │ │         self.bar[key] = value
  │ ╰─────────────────────────────^ attributes hash: 3839650646182900780
  │  
  = ContractAttributes {
        public_functions: [
            FunctionAttributes {
                is_public: true,
                name: "read_bar",
                params: [
                    (
                        "key",
                        Base(
                            Address,
                        ),
                    ),
                ],
                return_type: Array(
                    Array {
                        size: 10,
                        inner: Byte,
                    },
                ),
            },
            FunctionAttributes {
                is_public: true,
                name: "write_bar",
                params: [
                    (
                        "key",
                        Base(
                            Address,
                        ),
                    ),
                    (
                        "value",
                        Array(
                            Array {
                                size: 10,
                                inner: Byte,
                            },
                        ),
                    ),
                ],
                return_type: Base(
                    Unit,
                ),
            },
        ],
        init_function: None,
        events: [],
        string_literals: {},
        structs: [],
        external_contracts: [],
        created_contracts: {},
    }

note: 
  ┌─ features/address_bytes10_map.fe:5:16
  │
5 │         return self.bar[key].to_mem()
  │                ^^^^^^^^^^^^^^^^^^^^ attributes hash: 18270091135093349626
  │
  = ValueAttribute

note: 
  ┌─ features/address_bytes10_map.fe:4:27
  │
4 │     pub def read_bar(key: address) -> bytes[10]:
  │                           ^^^^^^^ attributes hash: 574436082528610497
  │
  = Base(
        Address,
    )

note: 
  ┌─ features/address_bytes10_map.fe:4:39
  │
4 │     pub def read_bar(key: address) -> bytes[10]:
  │                                       ^^^^^ attributes hash: 16931239362436195516
  │
  = Base(
        Byte,
    )

note: 
  ┌─ features/address_bytes10_map.fe:4:39
  │
4 │     pub def read_bar(key: address) -> bytes[10]:
  │                                       ^^^^^^^^^ attributes hash: 3890203001217727260
  │
  = Array(
        Array {
            size: 10,
            inner: Byte,
        },
    )

note: 
  ┌─ features/address_bytes10_map.fe:7:28
  │
7 │     pub def write_bar(key: address, value: bytes[10]):
  │                            ^^^^^^^ attributes hash: 574436082528610497
  │
  = Base(
        Address,
    )

note: 
  ┌─ features/address_bytes10_map.fe:7:44
  │
7 │     pub def write_bar(key: address, value: bytes[10]):
  │                                            ^^^^^ attributes hash: 16931239362436195516
  │
  = Base(
        Byte,
    )

note: 
  ┌─ features/address_bytes10_map.fe:7:44
  │
7 │     pub def write_bar(key: address, value: bytes[10]):
  │                                            ^^^^^^^^^ attributes hash: 3890203001217727260
  │
  = Array(
        Array {
            size: 10,
            inner: Byte,
        },
    )

note: 
  ┌─ features/address_bytes10_map.fe:2:18
  │
2 │     pub bar: Map<address, bytes[10]>
  │                  ^^^^^^^ attributes hash: 574436082528610497
  │
  = Base(
        Address,
    )

note: 
  ┌─ features/address_bytes10_map.fe:2:27
  │
2 │     pub bar: Map<address, bytes[10]>
  │                           ^^^^^ attributes hash: 16931239362436195516
  │
  = Base(
        Byte,
    )

note: 
  ┌─ features/address_bytes10_map.fe:2:27
  │
2 │     pub bar: Map<address, bytes[10]>
  │                           ^^^^^^^^^ attributes hash: 3890203001217727260
  │
  = Array(
        Array {
            size: 10,
            inner: Byte,
        },
    )

note: 
  ┌─ features/address_bytes10_map.fe:2:14
  │
2 │     pub bar: Map<address, bytes[10]>
  │              ^^^^^^^^^^^^^^^^^^^^^^^ attributes hash: 4759287443158325036
  │
  = Map(
        Map {
            key: Address,
            value: Array(
                Array {
                    size: 10,
                    inner: Byte,
                },
            ),
        },
    )


